import math

import sympy as sp
from sympy.utilities.lambdify import lambdify

def calch(b,a,n):
    h= ((b-a))/n
    return h

def xarray(a,h,n):
    xarr=[]
    xarr.append(a)
    for i in range(a+1,n+1):
        xarr.append(xarr[i-1]+h)
    print(xarr)
    return xarr

def yarray(axarr,n,func):
    yarr=[]
    fd=lambdify(x,func)
    for i in range(0,n+1):
        yarr.append(fd(float(axarr[i])))
    print("yarr"+str(yarr))
    return yarr


def simpsonMethod(yarr,h):

    num=yarr[0]
    for i in range(1,len(yarr)):
        if(i%2==0):
            num=num+2*yarr[i]
        else:
            num=num+4*yarr[i]
    num=num+yarr[len(yarr)-1]
    num=(1/3)*h*num
    return num



x=sp.symbols('x')
f=sp.sin(x)
print(f)
arrx=(xarray(0,calch(math.pi,0,4),4))
print(str(yarray(arrx,4,f)))
print(str(simpsonMethod(yarray(arrx,4,f),calch(math.pi,0,4))))
